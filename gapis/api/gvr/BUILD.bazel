# Copyright (C) 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("//tools/build:rules.bzl", "api_library", "apic_compile", "apic_template", "filter", "cc_copts")

proto_library(
    name = "gvr_proto",
    srcs = ["resolvables.proto"],
    visibility = ["//visibility:public"],
    deps = ["//gapis/service/path:path_proto"],
)

go_proto_library(
    name = "gvr_go_proto",
    importpath = "github.com/google/gapid/gapis/api/gvr",
    proto = ":gvr_proto",
    visibility = ["//visibility:public"],
    deps = ["//gapis/service/path:go_default_library"],
)

api_library(
    name = "api",
    api = "gvr.api",
    apiname = "gvr",
    includes = glob([
        "*.api",
    ]),
    visibility = ["//visibility:public"],
    deps = ["//gapis/messages:api"],
)

apic_template(
    name = "generated",
    api = ":api",
    templates = [
        "//gapis/api/templates:api",
        "//gapis/api/templates:mutate",
        "//gapis/api/templates:ctypes_h",
        "//gapis/api/templates:constant_sets",
        "//gapis/api/templates:convert",
    ],
    visibility = ["//visibility:public"],
)

apic_compile(
    name = "api_compiled",
    api = ":api",
    emit = ["clone"],
    symbols = "c",
)

# Needed because apic_compile, can't (yet) return a cc provider.
# :api_compiled produces a .o file, so this doesn't actually compile anything.
cc_library(
    name = "api_lib",
    srcs = [":api_compiled"],
)

apic_template(
    name = "ctypes_h",
    api = "//gapis/api/gvr:api",
    templates = [
        "//gapis/api/templates:ctypes_h",
    ],
)

cc_library(
    name = "headers",
    hdrs = [
        ":ctypes_h",
    ],
    copts = cc_copts(),
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "extension.go",
        "framebindings.go",
        "gvr.go",
        "importance.go",
        ":generated",  # keep
    ],
    cdeps = [
        ":headers",
        ":api_lib",
        "//gapil/runtime/cc",
        "//gapil/runtime/cc:cloner",
    ],
    cgo = True,  # keep
    clinkopts = [],  # keep
    embed = [
        ":gvr_go_proto",
    ],
    importpath = "github.com/google/gapid/gapis/api/gvr",
    visibility = ["//visibility:public"],
    deps = [
        "//core/data:go_default_library",  # keep
        "//core/data/binary:go_default_library",  # keep
        "//core/data/dictionary:go_default_library",  # keep
        "//core/data/id:go_default_library",  # keep
        "//core/data/protoconv:go_default_library",  # keep
        "//core/data/slice:go_default_library",  # keep
        "//core/event/task:go_default_library",  # keep
        "//core/image:go_default_library",
        "//core/math/interval:go_default_library",
        "//core/math/u64:go_default_library",  # keep
        "//core/memory/arena:go_default_library",  # keep
        "//core/os/device:go_default_library",  # keep
        "//gapil/constset:go_default_library",  # keep
        "//gapis/api:go_default_library",
        "//gapis/api/gles:go_default_library",
        "//gapis/api/gvr/gvr_pb:go_default_library",  # keep
        "//gapis/api/sync:go_default_library",
        "//gapis/api/transform:go_default_library",
        "//gapis/capture:go_default_library",
        "//gapis/database:go_default_library",
        "//gapis/extensions:go_default_library",
        "//gapis/memory:go_default_library",  #keep
        "//gapis/memory/memory_pb:go_default_library",  #keep
        "//gapis/messages:go_default_library",  # keep
        "//gapis/replay:go_default_library",
        "//gapis/replay/builder:go_default_library",  # keep
        "//gapis/replay/protocol:go_default_library",  # keep
        "//gapis/replay/value:go_default_library",  # keep
        "//gapis/resolve:go_default_library",
        "//gapis/resolve/cmdgrouper:go_default_library",
        "//gapis/service:go_default_library",
        "//gapis/service/path:go_default_library",
        "//gapis/stringtable:go_default_library",  # keep
    ],
)
