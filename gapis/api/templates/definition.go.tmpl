{{/*
 * Copyright (C) 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}}

{{/* ---- Includes ---- */}}
{{Include "go_common.tmpl"}}

{{$filename := "definition.go" }}
{{$ | Macro "Definition" | Reflow 4 | Write $filename}}

{{define "Definition"}}
  {{AssertType $ "API"}}
  {{template "Go.GeneratedHeader" (Global "OutputDir")}}

import (»
  "encoding/base64"
  "fmt"
¶
  "github.com/google/gapid/gapil/bapi"
  "github.com/google/gapid/gapis/api"
«)
¶
var definition *api.Definition
¶
func (a API) Definition() api.Definition {
    if definition == nil {
    	data, err := base64.StdEncoding.DecodeString(api_binary_bapi)
        if err != nil {
            panic(fmt.Errorf("Unable to decode {{$.Name}} definition. %v", err))
        }
        apis, mappings, err := bapi.Decode(data)
        if err != nil {
            panic(fmt.Errorf("Unable to load {{$.Name}} definition. %v", err))
        }
        definition = &api.Definition{Semantic: apis[0], Mappings: mappings}
    }
    return *definition
}
¶
{{end}}
